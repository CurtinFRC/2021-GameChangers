apply plugin: 'cpp'
apply plugin: 'google-test-test-suite'
apply plugin: 'edu.wpi.first.GradleRIO'


// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
	targets {
		roboRIO("roborio") {
			team = 9788
		}
	}
	artifacts {
		frcNativeArtifact('frcCpp') {
			targets << "roborio"
			component = 'frcUserProgram'
			// Debug can be overridden by command line, for use with VSCode
			debug = frc.getDebugOrDefault(false)
		}
		// Built in artifact to deploy arbitrary files to the roboRIO.
		fileTreeArtifact('frcStaticFileDeploy') {
			// The directory below is the local directory to deploy
			files = fileTree(dir: 'src/main/deploy')
			// Deploy to RoboRIO target, into /home/lvuser/deploy
			targets << "roborio"
			directory = '/home/lvuser/deploy'
		}
	}
}

// Set this to true to include the src folder in the include directories passed
// to the compiler. Some eclipse project imports depend on this behavior.
// We recommend leaving this disabled if possible. Note for eclipse project
// imports this is enabled by default. For new projects, its disabled
def includeSrcInIncludeRoot = true

// Set this to true to enable desktop support.
def includeDesktopSupport = false

// Support Rev products with WML
def includeWMLRevSupport = true

// Enable simulation gui support. Must check the box in vscode to enable support
// upon debugging
dependencies {
	simulation wpi.deps.sim.gui(wpi.platforms.desktop, true)
}

model {
	components {
		frcUserProgram(NativeExecutableSpec) {
			targetPlatform wpi.platforms.roborio
			if (includeDesktopSupport) {
				targetPlatform wpi.platforms.desktop
			}

			sources.cpp {
				source {
					srcDir 'src/main/cpp'
					srcDir 'WayFinder/cpp'
					include '**/*.cpp', '**/*.cc'

					srcDir rootProject.file('WML/src/main/cpp')
					if (includeWMLRevSupport) {
						srcDir rootProject.file('WML/src/rev/cpp')
					}
				}
				exportedHeaders {
					srcDir 'src/main/include'
					srcDir 'WayFinder/include'

					srcDir rootProject.file('WML/src/main/include')
					if (includeWMLRevSupport) {
						srcDir rootProject.file('WML/src/rev/include')
					}

					if (includeSrcInIncludeRoot) {
							srcDir 'src/main/cpp'
							srcDir 'WayFinder/cpp'

							srcDir rootProject.file('WML/src/main/cpp')
							if (includeWMLRevSupport) {
								srcDir rootProject.file('WML/src/rev/cpp')
							}
					}
				}
			}

			// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
			wpi.deps.wpilib(it)
			wpi.deps.vendor.cpp(it)
		}
	}
	testSuites {
		frcUserProgramTest(GoogleTestTestSuiteSpec) {
			testing $.components.frcUserProgram

			sources.cpp {
				source {
					srcDir 'src/test/cpp'
					include '**/*.cpp'
				}
			}

			wpi.deps.wpilib(it)
			wpi.deps.googleTest(it)
			wpi.deps.vendor.cpp(it)
		}
	}
}
